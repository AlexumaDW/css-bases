/* 
Posicionamiento CSS

La propiedad FLOAT y POSITION nos permiten modificar las posición natural de cualquier elemento del documento HTML.

El navegador coloca cada elemento teniendo en cuenta el orden en el que aparece en el documento y su tipo de visualización dependiendo si es un elemento de línea o de bloque.

Con FLOAT y POSITION podemos modificar este comportamiento.

Elementos Flotantes
- float: Convierte un elemento en flotante desplazándolo hasta la zona más a la izquierda o más a la derecha de la posición en la que originalmente se encontraba.
- clear: Limpia la flotación (left, right, both)

Tipos de Posicionamiento:
- static (default)
- relative
- absolute
- fixed
- sticky

Para mover los elementos posicionados se activa las propiedades:
- top (vertical - eje Y)
- bottom (vertical - eje Y)
- left (horizontal - eje X)
- right (horizontal - eje X)
- z index (profundidad - eje z)

La propiedad top tiene preferencia por sobre la propiedad bottom
La propiedad left tiene preferencia por sobre la propiedad right

Estás 5 propiedades no funcionan con el valor static.
*/

/*****************************************Estática****************************************/

/*Static: El valor por defecto significa que el elemento respeta el flujo del documento HTML, por lo que no se puede mover ni posicionar */

.static {
  background-color: yellow;
  position: static;
  width: 300px;
  height: 500px;
  top: 10px;
  left: 10px;
}

/*****************************************Relativa****************************************/

/* Relative: El elemento conserva sus dimensiones y posición original en el flujo del documento. Si se mueve toma referencia su posición original*/

.relative {
  background-color: turquoise;
  position: relative;
  width: 300px;
  height: 50px;
  /* top: 50px;
  left: 50px;
  bottom: 50px;
  right: 50px; */
  /* top: -50px;
  left: -50px; */
  bottom: -50px;
  right: -50px;
}

/****************************************Absolute*****************************************/

/* absolute: El elemento pierde sus dimensiones y posición en el flujo del documento HTML.
Si se mueve puede tomar como referencia 2 elementos:
1) El primer ancestro con posicionamiento relativo
2) Si no encuentra un ancestro con posicionamiento relativo, se mueve respecto del documento HTML */

.absolute {
  background-color: tomato;
  position: absolute;
  width: 200px;
  height: 200px;
  /* top: 0;
  left: 0; */
  right: 0px;
  bottom: 0px;
}

.relative-parent {
  background-color: khaki;
  position: relative;
  width: 600px;
  height: 50px;
  top: 50px;
  left: 50px;
}

.absolute-child {
  background-color: lightcoral;
  position: absolute;
  left: 0;
  top: 0;
}

/*****************************************Fijo********************************************/

/* Fixed: El elemento pierde sus dimensiones y posición original en el flujo del documento HTML. Si se mueve toma como referencia el documento HTML y queda fijo en la posición, cuando el scroll se mueva, el elemento no lo hará, queda FIJO */

.fixed {
  background-color: lightgreen;
  position: fixed;
  width: 300px;
  height: 100px;
  /* bottom: 10px;
  right: 10px; */
  top: 10px;
  left: 1000px;
}

/****************************************Sticky*******************************************/

/* Sticky: Es una combinación de posicionamiento relative y fixed, para este posicionamiento las propiedades de bottom, right, left y top no mueven en elemento, sirven como un punto de referencia, mientras no llegue a ese valor el elemento se comporta como relative, cuando llega al punto el elemento se comporta como fixed

Para que este comportamiento funcione el sticky debe ser hijo directo del body o su elemento contenedor debe tener dimensiones definidas y sólo será sticky dentro de las dimensiones de su contenedor padre.
*/

.sticky {
  background-color: lightskyblue;
  position: sticky;
  top: 50px;
}

.sticky-parent {
  border: thin dashed black;
  height: 600px;
}

.sticky-child {
  background-color: lightcoral;
  position: sticky;
  top: 75px;
}

/***************************************z-index*******************************************/

/* Z-index: Propiedad que permite controlar la profundidad de los elementos posicionados, su valor por defecto es auto, acepta números positivos, negativos y cero

A mayor valor el elemento esta más al frente, a menor valor más al fondo

Un elemento padre nunca podrá estar sobre sus elementos hijos, sin embargo los elementos hijos si pueden dandolés un valor negativo y que el elemento padre no tenga definido un valor de z-index*/

.z-index-1,
.z-index-2 {
  background-color: brown;
  height: 200px;
  width: 200px;
  border: thin solid black;
  position: relative;
}

.z-index-1 {
  z-index: 1;
}

/* Poner 9 varios es mala practica, mejor definir ir de 10 en 10 5 en 5 y dar espacio a meter elementos dentro */
.z-index-2 {
  top: -200px;
  left: 100px;
  z-index: 2;
}