/* Comentario en CSS
Regla CSS consta de 2 partes
1) El selector
2) Bloque de declaraciones:{
atributo: valor;
atributo-de-mas-de-2-palabras: valor-de-mas-de-2-palabras;
} */


/* Importando otra hoja de estilos css ES UNA MALA PRACTICA:
porque detiene la carga es bloqueante
*/
@import url("./otra-hoja.css");

html {
  scroll-behavior: smooth;
}

h1 {
  background-color: skyblue;
  color: orangered;
}

/*************************************Selectores CSS*************************************/

/* Selectores b√°sicos 
1) etiquetas
2) identificador - atributo id #
3) clases - atributo class .
*/

p {
  color: midnightblue;
}

/* Dar estilos con ID se considera mala practica */
#parrafo-dos {
  background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro c√≥digo CSS */

.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-white {
  color: white;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

/***********************************Selectores Avanzados*********************************/

.hijos-directos>li {
  background-color: thistle;
}

.hijos-descendientes b {
  background-color: thistle;
}

/* El selector de hermanos-general solo aplican a los elementos inferiores y que sean hermanos */
.hermanos-general~li {
  background-color: thistle;
}

/* El selector de hermanos-adyacente solo aplica al elemento inferior y que sea hermano */
.hermanos-adyacentes+li {
  background-color: thistle;
}

/* Selectores de atributos */

.selectores-atributos a[href] {
  color: orangered;

}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}


/*El comod√≠n del * aplica el estilo si contine el texto en cuesti√≥n */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/* El comod√≠n del ^ aplica el estilo si empieza con el texto en cuesti√≥n */
.selectores-atributos a[href^="https:"] {
  text-decoration: none;
}

/* El comod√≠n del $ aplica el estilo si termina con el texto en cuesti√≥n */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/* El comod√≠n del ~ aplica el estilo si contiene la clase en cuesti√≥n */
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/* El comod√≠n del | aplica el estilo si contiene la clase en cuesti√≥n seguido de un -*/
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/* selector universal */

* {
  font-family: sans-serif;
}

.selector-universal * {
  font-size: 24px;
}

/*************************************Pseudoclases***************************************/

/*Dan estilo dependiendo el contexto, posici√≥n o estado del elemento*/


.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

/* El orden es importante:
:link - :active - :visited - :hover */
.menu-pseudoclases a:visited {
  color: olive;
}

.menu-pseudoclases a:hover {
  color: orange;
}

.pseudoclases:hover {
  font-size: 24px;
}

#inicio:target {
  background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
  color: green;
}

.lista-pseudoclases li:last-child {
  color: violet;
}

.lista-pseudoclases li:nth-child(3) {
  color: red;
}

.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n+1) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: orange;
}

.articulos-pseudoclases p:first-of-type {
  background-color: pink;
}

.articulos-pseudoclases p:last-of-type {
  background-color: pink;
}

.articulos-pseudoclases p:nth-last-of-type(3) {
  background-color: pink;
}

.articulos-pseudoclases *:not(p) {
  background-color: beige;
}

/************************************Pseudoelementos*************************************/

/* Pseudoelementos : Dan estilos a partes especificas de un elemento, se usa :: para diferenciarlos de las pseudoclases */

.saga-geminis::before {
  content: "ü§º‚Äç‚ôÇÔ∏è";
}

.saga-geminis::after {
  content: "‚ôä";
}

.saga-precio::before {
  content: "üí≤";
  font-weight: bold;
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: navy;
}

.input-pseudoelementos::placeholder {
  color: green;
}

/**********************************Agrupar Selectores************************************/

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/***********************************Algoritmo de CSS*************************************/

/* El algoritmo de CSS: Es la forma en el que el navegador aplica los estilos al documento HTML. Es vital entender este consepto para que entiendas como se aplica y en algunas ocaciones se sobreescriben las reglas CSS.

1) La c√°scada.
2) La especificidad.
3) La Herencia.

La C√°scada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:
1) El origen del c√≥digo:
- El User Agent (Los estilos por defecto del navegador)
- Personalizaciones del usuario.
- Los estilos del autor.
2) La especificidad del Selector
3) El orden de aparici√≥n


La especificidad es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma:

------------------------------------------------------------------------------------------
Etiquetas y Pseudoelementos         0,0,0,1
------------------------------------------------------------------------------------------
Clases, Atributos y Pseudoclases    0,0,1,0
------------------------------------------------------------------------------------------
Identificadores                     0,1,0,0
------------------------------------------------------------------------------------------
Estilos en l√≠nea                    1,0,0,0
------------------------------------------------------------------------------------------
!important                          Rompe la especificidad
------------------------------------------------------------------------------------------

Importante no rebazar los 2 selectores.

La herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarlo se usa el valor inherit, si queremos evitarlo podemos aplicar otro valor o inicializar la propiedad en cuesti√≥n con otro valor initial.
*/

blockquote#cita-marco.cita-marco {
  background-color: cadetblue;
}

blockquote {
  background-color: chocolate;
}

.cita-marco {
  background-color: azure !important;
}

#cita-marco {
  background-color: lightgreen;
}

blockquote.cita-marco {
  background: blueviolet;
}

.cita-marco {
  background-color: cornflowerblue;
}

blockquote#cita-marco {
  background-color: aqua;
}

.cita-marco {
  background-color: moccasin !important;
  font-size: 32px;
  border: darkred 2px dashed;
}

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
  font-size: 24px;
  font-size: initial;
  border: inherit;
}

/*****************************************************************************************/
/*****************************************************************************************/